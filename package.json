{
  "name": "podman-desktop",
  "productName": "Podman Desktop",
  "repository": "https://github.com/podman-desktop/podman-desktop",
  "homepage": "https://www.podman-desktop.io",
  "version": "1.17.0-next",
  "license": "apache-2.0",
  "type": "module",
  "private": true,
  "engines": {
    "node": ">=20.9.0",
    "npm": ">=10.2.3"
  },
  "main": "packages/main/dist/index.cjs",
  "scripts": {
    "build": "pnpm run build:main && pnpm run build:preload && pnpm run build:preload-docker-extension && pnpm run build:preload-webview && pnpm run build:ui && pnpm run build:renderer && pnpm run build:extensions",
    "build:main": "cd ./packages/main && vite build",
    "build:extensions": "pnpm run build:extensions:compose && pnpm run build:extensions:docker && pnpm run build:extensions:lima && pnpm run build:extensions:podman && pnpm run build:extensions:kubecontext && pnpm run build:extensions:kind && pnpm run build:extensions:registries && pnpm run build:extensions:kubectl-cli",
    "build:extensions:compose": "cd ./extensions/compose && pnpm run build",
    "build:extensions:docker": "cd ./extensions/docker && pnpm run build",
    "build:extensions:kubecontext": "cd ./extensions/kube-context && pnpm run build",
    "build:extensions:kind": "cd ./extensions/kind && pnpm run build",
    "build:extensions:lima": "cd ./extensions/lima && pnpm run build",
    "build:extensions:podman": "cd ./extensions/podman/packages/extension && pnpm run build",
    "build:extensions:registries": "cd ./extensions/registries && pnpm run build",
    "build:extensions:kubectl-cli": "cd ./extensions/kubectl-cli && pnpm run build",
    "build:extension-api": "cd ./packages/extension-api && vite build",
    "build:preload": "cd ./packages/preload && vite build",
    "build:preload-docker-extension": "cd ./packages/preload-docker-extension && vite build",
    "build:preload-webview": "cd ./packages/preload-webview && vite build",
    "build:preload:types": "dts-cb -i \"packages/preload/tsconfig.json\" -o \"packages/preload/exposedInMainWorld.d.ts\" && dts-cb -i \"packages/preload-docker-extension/tsconfig.json\" -o \"packages/preload-docker-extension/exposedInDockerExtension.d.ts\" && dts-cb -i \"packages/preload-webview/tsconfig.json\" -o \"packages/preload-webview/exposedInWebview.d.ts\"",
    "build:renderer": "cross-env NODE_OPTIONS=--max-old-space-size=4096 vite -c packages/renderer/vite.config.js build",
    "build:ui": "cd ./packages/ui && pnpm run build",
    "compile": "cross-env MODE=production pnpm run build && electron-builder build --config .electron-builder.config.cjs --dir --config.asar=false",
    "compile:next": "cross-env MODE=production pnpm run build && electron-builder build --publish always --config .electron-builder.config.cjs",
    "compile:pull-request": "cross-env MODE=production pnpm run build && electron-builder build --publish never --config .electron-builder.config.cjs",
    "compile:current": "cross-env MODE=production pnpm run build && electron-builder build --config .electron-builder.config.cjs",
    "test": "pnpm run test:unit && pnpm run test:e2e",
    "test:unit": "pnpm run test:main && pnpm run test:preload && pnpm run test:preload-docker-extension && pnpm run test:preload-webview && pnpm run test:ui && pnpm run test:renderer && pnpm run test:scripts:stylesheet && pnpm run test:tools && pnpm run test:extensions && pnpm run test:website",
    "test:e2e": "pnpm run test:e2e:build && pnpm run test:e2e:run",
    "test:e2e:build": "cross-env NODE_ENV=development MODE=development DEBUG=pw:browser pnpm run build",
    "test:e2e:run": "xvfb-maybe --auto-servernum --server-args='-screen 0 1280x960x24' -- npx playwright test tests/playwright/src/specs/ --grep-invert @k8s_e2e",
    "test:e2e:all": "pnpm run test:e2e:build && pnpm run test:e2e:all:run",
    "test:e2e:all:run": "xvfb-maybe --auto-servernum --server-args='-screen 0 1280x960x24' -- npx playwright test tests/playwright/src/specs/",
    "test:e2e:smoke": "pnpm run test:e2e:build && pnpm run test:e2e:smoke:run",
    "test:e2e:smoke:run": "xvfb-maybe --auto-servernum --server-args='-screen 0 1280x960x24' -- npx playwright test tests/playwright/src/specs/ -g @smoke",
    "test:e2e:k8s": "pnpm run test:e2e:build && pnpm run test:e2e:k8s:run",
    "test:e2e:k8s:run": "xvfb-maybe --auto-servernum --server-args='-screen 0 1280x960x24' -- npx playwright test tests/playwright/src/specs/ -g @k8s_e2e",
    "test:e2e:extension": "pnpm run test:e2e:build && pnpm run test:e2e:extension:run",
    "test:e2e:extension:run": "xvfb-maybe --auto-servernum --server-args='-screen 0 1280x960x24' -- npx playwright test tests/playwright/src/specs/extension-installation.spec.ts",
    "test:e2e:remote": "pnpm run test:e2e:build && pnpm run test:e2e:remote:run",
    "test:e2e:remote:run": "xvfb-maybe --auto-servernum --server-args='-screen 0 1280x960x24' -- npx playwright test tests/playwright/src/special-specs/podman-remote/ -g @podman-remote",
    "test:e2e:update": "pnpm run test:e2e:build && pnpm run test:e2e:update:run",
    "test:e2e:update:run": "xvfb-maybe --auto-servernum --server-args='-screen 0 1280x960x24' -- npx playwright test tests/playwright/src/special-specs/installation/ -g @update-install",
    "test:main": "vitest run -r packages/main --passWithNoTests --coverage",
    "test:preload": "vitest run -r packages/preload --passWithNoTests --coverage",
    "test:preload-docker-extension": "vitest run -r packages/preload-docker-extension --passWithNoTests --coverage",
    "test:preload-webview": "vitest run -r packages/preload-webview --coverage",
    "test:extensions": "vitest run -r extensions --passWithNoTests --coverage && pnpm run test:extensions:compose && pnpm run test:extensions:kind && pnpm run test:extensions:docker && pnpm run test:extensions:lima && pnpm run test:extensions:kube && pnpm run test:extensions:podman && pnpm run test:extensions:registries && pnpm run test:extensions:kubectl-cli",
    "test:extensions:kind": "vitest run -r extensions/kind --passWithNoTests --coverage ",
    "test:extensions:compose": "vitest run -r extensions/compose --passWithNoTests --coverage",
    "test:extensions:docker": "vitest run -r extensions/docker --passWithNoTests --coverage ",
    "test:extensions:kube": "vitest run -r extensions/kube-context --passWithNoTests --coverage ",
    "test:extensions:lima": "vitest run -r extensions/lima --passWithNoTests --coverage ",
    "test:extensions:podman": "vitest run -r extensions/podman/packages/extension --passWithNoTests --coverage ",
    "test:extensions:registries": "vitest run -r extensions/registries --passWithNoTests --coverage ",
    "test:extensions:kubectl-cli": "vitest run -r extensions/kubectl-cli --passWithNoTests --coverage ",
    "test:renderer": "pnpm run build:preload:types && pnpm run build:ui && vitest -c packages/renderer/vite.config.js run packages/renderer --passWithNoTests --coverage",
    "test:ui": "vitest --config packages/ui/vite.config.js run --passWithNoTests --coverage",
    "test:tools": "vitest run tools --passWithNoTests --coverage",
    "test:scripts:stylesheet": "vitest run ./scripts/generate-stylesheet.spec.ts --passWithNoTests",
    "test:watch": "vitest watch",
    "test:website": "vitest run -r website --passWithNoTests --coverage",
    "watch": "node scripts/watch.mjs",
    "format:check": "biome format && prettier --cache --check \"website/**/*.md\"",
    "format:fix": "biome format --write && prettier --cache --write \"website/**/*.md\"",
    "markdownlint:check": "markdownlint-cli2 \"website/**/*.md\" \"#website/node_modules\" \"#website/api\"",
    "markdownlint:fix": "markdownlint-cli2 --fix \"website/**/*.md\" \"#website/node_modules\"",
    "lint:clean": "rimraf .eslintcache",
    "lint:fix": "node --max-old-space-size=6144 node_modules/eslint/bin/eslint.js --cache . --cache-strategy content --fix",
    "lint:check": "node --max-old-space-size=6144 node_modules/eslint/bin/eslint.js --cache . --cache-strategy content",
    "svelte:check": "svelte-check --ignore \"packages/ui/dist,packages/renderer/src/lib/ui/DetailsPage.svelte,packages/renderer/src/lib/ui/EngineFormPage.svelte,packages/renderer/src/lib/ui/FormPage.svelte,storybook\"",
    "typecheck:extension-api": "tsc --noEmit -p packages/extension-api/tsconfig.json",
    "typecheck:main": "tsc --noEmit -p packages/main/tsconfig.json",
    "typecheck:preload": "tsc --noEmit -p packages/preload/tsconfig.json",
    "typecheck:preload-dd-extension": "tsc --noEmit -p packages/preload-docker-extension/tsconfig.json",
    "typecheck:preload-webview": "tsc --noEmit -p packages/preload-webview/tsconfig.json",
    "typecheck:renderer": "pnpm run build:preload:types && tsc --noEmit -p packages/renderer/tsconfig.json",
    "typecheck:ui": "pnpm run build:ui && pnpm run build:preload:types && tsc --noEmit -p packages/ui/tsconfig.json",
    "typecheck:extensions": "pnpm run typecheck:extensions:compose && pnpm run typecheck:extensions:kind && pnpm run typecheck:extensions:docker && pnpm run typecheck:extensions:lima && pnpm run typecheck:extensions:kube-context && pnpm run typecheck:extensions:podman && pnpm run typecheck:extensions:registries && pnpm run typecheck:extensions:kubectl-cli",
    "typecheck:extensions:kind": "tsc --noEmit --project extensions/kind",
    "typecheck:extensions:compose": "tsc --noEmit --project extensions/compose",
    "typecheck:extensions:docker": "tsc --noEmit --project extensions/docker",
    "typecheck:extensions:kube-context": "tsc --noEmit --project extensions/kube-context",
    "typecheck:extensions:lima": "tsc --noEmit --project extensions/lima",
    "typecheck:extensions:podman": "tsc --noEmit --project extensions/podman/packages/extension",
    "typecheck:extensions:registries": "tsc --noEmit --project extensions/registries",
    "typecheck:extensions:kubectl-cli": "tsc --noEmit --project extensions/kubectl-cli",
    "typecheck": "pnpm run typecheck:main && pnpm run typecheck:preload && pnpm run typecheck:ui && pnpm run typecheck:renderer && pnpm run typecheck:preload-dd-extension && pnpm run typecheck:preload-webview && pnpm run typecheck:extensions && pnpm run typecheck:extension-api",
    "website:build": "pnpm run storybook:build && cd website && pnpm run docusaurus build",
    "website:prod": "pnpm run website:build && cd website/build && pnpm serve",
    "website:dev": "pnpm run storybook:build && cd website && pnpm run docusaurus start",
    "website:screenshots": "cd website-argos && pnpm run screenshot",
    "storybook:css": "tsx ./scripts/generate-stylesheet.ts --output storybook/.storybook/themes.css",
    "storybook:dev": "pnpm run storybook:css && cd storybook && pnpm run dev",
    "storybook:build": "pnpm run build:ui && pnpm run storybook:css && cd storybook && pnpm run build",
    "prepare": "husky install",
    "postinstall": "playwright install chromium"
  },
  "lint-staged": {
    "*.{js,ts,tsx,svelte}": [
      "node --max-old-space-size=6144 node_modules/eslint/bin/eslint.js --cache --fix",
      "biome format --write"
    ],
    "*.md": "prettier --cache --write",
    "*.{css,json}": "biome format --write"
  },
  "devDependencies": {
    "@biomejs/biome": "^1.9.4",
    "@commitlint/cli": "^19.7.1",
    "@commitlint/config-conventional": "^19.7.1",
    "@electron/fuses": "^1.8.0",
    "@eslint/compat": "^1.2.6",
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.19.0",
    "@playwright/test": "1.50.1",
    "@podman-desktop/api": "workspace:",
    "@rollup/plugin-commonjs": "^28.0.2",
    "@rollup/plugin-json": "^6.1.0",
    "@rollup/plugin-node-resolve": "^16.0.0",
    "@rollup/plugin-typescript": "^12.1.2",
    "@tsconfig/strictest": "^2.0.5",
    "@types/adm-zip": "^0.5.7",
    "@types/dockerode": "^3.3.33",
    "@types/express": "^4.17.21",
    "@types/getos": "^3.0.4",
    "@types/js-yaml": "^4.0.9",
    "@types/node": "^20",
    "@types/tar": "^6.1.13",
    "@types/tar-fs": "^2.0.4",
    "@types/validator": "^13.12.2",
    "@typescript-eslint/eslint-plugin": "^8.21.0",
    "@typescript-eslint/parser": "^8.21.0",
    "@vitest/coverage-v8": "^2.1.6",
    "@vitest/eslint-plugin": "^1.1.25",
    "cross-env": "7.0.3",
    "dts-for-context-bridge": "0.7.1",
    "electron": "34.0.2",
    "electron-builder": "25.1",
    "electron-builder-notarize": "^1.5.2",
    "eslint": "^9.19.0",
    "eslint-import-resolver-custom-alias": "^1.3.2",
    "eslint-import-resolver-typescript": "^3.7.0",
    "eslint-plugin-etc": "^2.0.3",
    "eslint-plugin-file-progress": "^3.0.1",
    "eslint-plugin-import": "^2.31.0",
    "eslint-plugin-no-null": "^1.0.2",
    "eslint-plugin-redundant-undefined": "^1.0.0",
    "eslint-plugin-simple-import-sort": "^12.1.1",
    "eslint-plugin-sonarjs": "^3.0.1",
    "eslint-plugin-unicorn": "^56.0.1",
    "fzstd": "^0.1.1",
    "get-tsconfig": "^4.10.0",
    "globals": "^15.14.0",
    "husky": "^9.1.7",
    "js-yaml": "^4.1.0",
    "lint-staged": "^15.4.3",
    "minimist": "^1.2.8",
    "msw": "^2.7.0",
    "prettier": "^3.3.3",
    "proxy": "^2.2.0",
    "typescript": "5.6.3",
    "typescript-eslint": "^8.21.0",
    "validator": "^13.12.0",
    "vite": "^6.1.1",
    "vitest": "^2.1.6",
    "xvfb-maybe": "^0.2.1"
  },
  "dependencies": {
    "@docker/extension-api-client-types": "0.3.4",
    "@kubernetes/client-node": "^1.0.0",
    "@segment/analytics-node": "^2.2.1",
    "@types/semver": "^7.5.8",
    "@types/stream-json": "^1.7.8",
    "@types/winreg": "^1.2.36",
    "adm-zip": "^0.5.16",
    "check-disk-space": "^3.4.0",
    "chokidar": "^3.6.0",
    "compare-versions": "^6.1.1",
    "date.js": "^0.3.3",
    "dockerode": "^4.0.2",
    "electron-context-menu": "4.0.4",
    "electron-updater": "6.3.9",
    "electron-util": "^0.18.1",
    "express": "^4.21.2",
    "getos": "^3.2.1",
    "got": "^14.4.2",
    "hpagent": "^1.2.0",
    "minimist": "^1.2.8",
    "moment": "^2.30.1",
    "os-locale": "^6.0.2",
    "semver": "^7.7.1",
    "stream-json": "^1.9.1",
    "sudo-prompt": "^9.2.1",
    "tar": "^7.4.3",
    "tar-fs": "^3.0.8",
    "tar-stream": "^3.1.7",
    "undici": "^7.3.0",
    "win-ca": "^3.5.1",
    "winreg": "^1.2.5",
    "yaml": "^2.7.0"
  },
  "pnpm": {
    "overrides": {
      "rollup": "^4.22.5",
      "react-router>path-to-regexp": "^1.9.0",
      "serve-handler>path-to-regexp": "^3.3.0",
      "express>cookie": "^0.7.0",
      "@docusaurus/theme-mermaid>mermaid": "^10.9.3",
      "webpack-dev-server>http-proxy-middleware": "^2.0.7",
      "@kubernetes/client-node>jsonpath-plus": "^10.0.7",
      "cssstyle>@asamuzakjp/css-color": "^2.8.3-b.2"
    }
  },
  "packageManager": "pnpm@9.14.1+sha512.7f1de9cffea40ff4594c48a94776112a0db325e81fb18a9400362ff7b7247f4fbd76c3011611c9f8ac58743c3dc526017894e07948de9b72052f874ee2edfdcd"
}
